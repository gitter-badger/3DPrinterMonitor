<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:valueObjects="valueObjects.*"
			   xmlns:printedmodelsservice="services.printedmodelsservice.*"
			   minWidth="400"
			   title="Ajouter un nouveau modele"
			   width="100%"
			   height="100%"
			   close="closeMe(event)"
			   creationComplete="titlewindow1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import Control.ServerEvent;
			
			import Model.Constants;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			protected function closeMe(event:CloseEvent=null):void
			{
				PopUpManager.removePopUp(this);
			}

			protected function button_clickHandler(event:MouseEvent):void
			{
				form.alpha=0.3;
				cursorManager.setBusyCursor();
				var type3DModels2:Type3DModels=new Type3DModels();
				//type3DModels2.idmodels = parseInt(idmodelsTextInput.text);
				type3DModels2.STLfile=sTLfileTextInput.text;
				type3DModels2.name=nameTextInput.text;
				type3DModels2.sizeX=sizeXTextInput.text;
				type3DModels2.sizeY=sizeYTextInput.text;
				type3DModels2.sizeZ=sizeZTextInput.text;
				type3DModels2.weight=weightTextInput.text;
				type3DModels2.cost=costTextInput.text;
				type3DModels2.RRP=rRPTextInput.text;
				type3DModels2.TVA=tVATextInput.text;

				create3DModelsResult.token=printedModelsService.create3DModels(type3DModels2);
				printedModelsService.commit();

				fileReference.upload(uploadURLRequest);
				this.currentState="upload";
				this.title = "Téléversement en cours...";
				PopUpManager.centerPopUp(this);
			}

			protected function uploadBtn_clickHandler(event:MouseEvent):void
			{
				//THIS NEEDS TO BE THE RESULT OF A CLICK EVENT (OR IT WILL SILENTLY FAIL!)
				fileReferenceList.browse(filter);
			}

			private var uploadURLRequest:URLRequest;
			private var filter:Array;
			private var fileReferenceList:FileReferenceList;
			private var fileReference:FileReference;

			private function initFile():void
			{
				var l:FileFilter=new FileFilter("StereoLithography Files (*.stl)", "*.stl");
				filter=[l];
				trace("Constants.UPLOADURL: " + Constants.UPLOADURL);
				uploadURLRequest=new URLRequest(Constants.UPLOADURL);
				fileReferenceList=new FileReferenceList();
				fileReferenceList.addEventListener(Event.SELECT, fSelected);
			}

			private function handleIOError(event:IOErrorEvent):void
			{
				Alert.show("handleIOError: " + event.text);
			}

			private function handleSecurityError(event:SecurityErrorEvent):void
			{
				Alert.show("handleSecurityError: " + event.text);
			}

			private function handleHTTPStatus(event:HTTPStatusEvent):void
			{
				Alert.show("HTTP status: " + event.status);
			}

			private function handleUploadProgress(event:ProgressEvent):void
			{
				var percent:int=event.bytesLoaded / event.bytesTotal * 100;
				uploadBar.setProgress(percent, 100);
				//	Alert.show("progress: "+event.bytesLoaded+" / "+event.bytesTotal);
			}

			private function fSelected(e:Event):void
			{
				fileReferenceList=FileReferenceList(e.target);
				var fileList:Array=fileReferenceList.fileList;
				fileReference=FileReference(fileList[0]);
				fileReference.addEventListener(Event.COMPLETE, uploadCompleteHandler);
				fileReference.addEventListener(IOErrorEvent.IO_ERROR, handleIOError);
				fileReference.addEventListener(SecurityErrorEvent.SECURITY_ERROR, handleSecurityError);
				fileReference.addEventListener(ProgressEvent.PROGRESS, handleUploadProgress);
				//fileReference.addEventListener(HTTPStatusEvent.HTTP_STATUS, handleHTTPStatus);
				sTLfileTextInput.includeInLayout=sTLfileTextInput.visible=true;
				//var substr:String = fileReference.name.substring(0, fileReference.name.length-4);
				sTLfileTextInput.text=type3DModels.name=fileReference.name;
			}

			private function uploadCompleteHandler(event:Event):void
			{
				cursorManager.removeBusyCursor();
				trace("File Uploaded: " + event.target.name);
				dispatchEvent(new ServerEvent(ServerEvent.REFRESH_MODELS, true, true, null));
				closeMe();
			}

			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				initFile();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<valueObjects:Type3DModels id="type3DModels"
								   sizeX="100"
								   sizeY="100"
								   sizeZ="100"
								   weight="25"/>
		<printedmodelsservice:PrintedModelsService id="printedModelsService"
												   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
												   showBusyCursor="true"/>
		<s:CallResponder id="create3DModelsResult"/>
	</fx:Declarations>
	<s:states>
		<s:State name="form"/>
		<s:State name="upload"/>
	</s:states>
	<s:layout>
		<s:VerticalLayout paddingBottom="10"
						  paddingLeft="10"
						  paddingRight="10"
						  paddingTop="10"/>
	</s:layout>
	<s:Form id="form"
			defaultButton="{button}"
			width="100%"
			includeIn="form">
		<!--<s:layout>
			<s:VerticalLayout horizontalAlign="center" />
		</s:layout>-->
		<!--		<s:FormItem label="Idmodels">
					<s:TextInput id="idmodelsTextInput" text="{type3DModels.idmodels}" includeInLayout="false" visible="false"/>
				</s:FormItem>-->
		<s:FormItem label="Fichier STL" required="true">
			<s:TextInput id="sTLfileTextInput"
						 text="{type3DModels.STLfile}"
						 includeInLayout="false"
						 visible="false"/>
			<s:Button id="uploadBtn"
					  label="choisir un fichier"
					  click="uploadBtn_clickHandler(event)"/>
		</s:FormItem>
		<s:FormItem label="Nom" required="true">
			<s:TextInput id="nameTextInput"
						 text="{type3DModels.name}"
						 width="100%"/>
		</s:FormItem>
		<s:FormItem label="Dimension X" required="true">
			<s:TextInput id="sizeXTextInput"
						 text="{type3DModels.sizeX}"
						 width="100%"/>
		</s:FormItem>
		<s:FormItem label="Dimension Y" required="true">
			<s:TextInput id="sizeYTextInput"
						 text="{type3DModels.sizeY}"
						 width="100%"/>
		</s:FormItem>
		<s:FormItem label="Dimension Z" required="true">
			<s:TextInput id="sizeZTextInput"
						 text="{type3DModels.sizeZ}"
						 width="100%"/>
		</s:FormItem>
		<s:FormItem label="Poids" required="true">
			<s:TextInput id="weightTextInput"
						 text="{type3DModels.weight}"
						 width="100%"/>
		</s:FormItem>
		<s:FormItem label="Cout">
			<s:TextInput id="costTextInput"
						 text="{type3DModels.cost}"
						 width="100%"/>
		</s:FormItem>
		<s:FormItem label="Prix recommande">
			<s:TextInput id="rRPTextInput"
						 text="{type3DModels.RRP}"
						 width="100%"/>
		</s:FormItem>
		<s:FormItem label="TVA">
			<s:TextInput id="tVATextInput"
						 text="{type3DModels.TVA}"
						 width="100%"/>
		</s:FormItem>
		<s:Button id="button"
				  horizontalCenter="0"
				  height="30"
				  label="Envoyer"
				  click="button_clickHandler(event)"/>
	</s:Form>
	<mx:ProgressBar labelPlacement="center"
					height="25"
					label=""
					width="100%"
					id="uploadBar"
					maximum="100"
					mode="manual"
					includeIn="upload"/>
</s:TitleWindow>
